1차 개인프로젝트 - 프로파일링 리포트 생성
pip install nbconvert

jupyter nbconvert --to python  파일명.ipynb

pip install streamlit

streamlit run 파일명.py

# 사전 설치 : pip install ydata-profiling==4.12.2  pandas==2.2.3  numpy==2.2.3
# 사전 폴더 생성 : report
# llvmlite numbar가 설치된 경우에는 삭제 : pip uninstall llvmlite numba
import os
import pandas as pd
from ydata_profiling import ProfileReport


# 데이터 불러오기
file_path = 'dataset/diabetes.csv'
df = pd.read_csv(file_path)

# 데이터 정보 출력
print(df.info())

# YData Profiling으로 데이터 프로파일링 보고서 생성
profile = ProfileReport(df, title="Diabetes Dataset Profiling Report", explorative=True)

# 보고서를 HTML 파일로 저장
output_file = 'report/diabetes_profiling_report.html'
profile.to_file(output_file)
print(f"프로파일링 보고서가 생성되었습니다: {output_file}")

import pandas as pd
from ydata_profiling import ProfileReport

# 데이터 불러오기
df = pd.read_csv('./dataset/diabetes.csv', encoding='cp949')

# 프로파일링 리포트 생성
profile = ProfileReport(
    df,
    title="EDA 보고서",
    explorative=True,
    html={
        'style': {
            'theme': 'united'  # 허용된 theme 중 하나로 변경
        }
    }
)

# 리포트 저장 및 출력
profile.to_file("./report/eda_report.html")

pip install ydata-profiling

# 보고서를 HTML 파일로 저장
output_file = 'report/mental_health_profiling_report.html'
profile.to_file(output_file)
print(f"프로파일링 보고서가 생성되었습니다: {output_file}")

혼동행렬과 히트맵 출력
from sklearn.metrics import confusion_matrix
# 혼동 행렬 (Confusion Matrix) 시각화
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
# annot=True : 각 셀안의 숫자값을 표시, fmt="d" : 숫자값을 정수형태로 표시, cmap="Blues" : 색상값은 블루
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=target_names, yticklabels=target_names)
plt.title("Confusion Matrix")
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.show()